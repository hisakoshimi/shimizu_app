<div class="center jumbotron">
  <h1>投稿を始めてみましょう！</h1>

  <h2>
    これは
    <a href="http://railstutorial.org/">Ruby on Rails Tutorial</a>
    のサンプルアプリケーションです
  </h2>

  <%= link_to "Sign up now!", new_user_registration_path, class: "btn btn-lg btn-primary" %>
  <!--清水さんの書いていたものです-->
  <!--<%#= link_to "Sign up now!", 'new_user_registration_path', class: "btn btn-lg btn-primary" %>-->
</div>
<%= link_to image_tag("rails.png", alt: "Rails"), 'http://rubyonrails.org/' %>

<div id="sampleCarousel" class="carousel slide" data-ride="carousel">
	<div class="carousel-inner" role="listbox">
		<div class="item active">
			<img src="/header_2.jpg" alt="First slide">
		</div>
		<div class="item">
			<img src="/header_3.jpg" alt="Second slide">
		</div>
		<div class="item">
			<img src="/header_4.jpg" alt="Third slide">
		</div>
	</div>
</div>

  <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height:   500px;
        width:   1150px;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding:0;
      }
    </style>
 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAryQwoEeX2NRaVrF7B-w4E395N484T_8c"></script>
    <script>
      // In this example, we center the map, and add a marker, using a LatLng object
      // literal instead of a google.maps.LatLng object. LatLng object literals are
      // a convenient way to add a LatLng coordinate and, in most cases, can be used
      // in place of a google.maps.LatLng object.

      var map;
      function initialize() {
        var mapOptions = {
          zoom: 8,
          center: {lat: 41.413594, lng: 2.153269}
        };
        map = new google.maps.Map(document.getElementById('map'),
            mapOptions);

        var marker = new google.maps.Marker({
          // The below line is equivalent to writing:
          // position: new google.maps.LatLng(-34.397, 150.644)
          position: {lat: 41.413594, lng: 2.153269},
          map: map
        });

        // You can use a LatLng literal in place of a google.maps.LatLng object when
        // creating the Marker object. Once the Marker object is instantiated, its
        // position will be available as a google.maps.LatLng object. In this case,
        // we retrieve the marker's position using the
        // google.maps.LatLng.getPosition() method.
        var infowindow = new google.maps.InfoWindow({
          content: '<p>Marker Location:' + marker.getPosition() + '</p>'
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.open(map, marker);
        });
      }

      google.maps.event.addDomListener(window, 'load', initialize);
    </script>
    <div id="map"></div>
    
